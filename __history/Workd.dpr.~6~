
program Workd;

{$APPTYPE CONSOLE}

uses
  SysUtils;
type
  LongNum=Array[1..1000] of Integer;
  TCompareRez = (Equally, More, Less);
var
  Ab,nb,nrez,i:Integer;
  a,b,rez: LongNum;
n: Integer;
k: string;
inp:string;
numInp:string;
maxNumInp:string;
currnum:int64;
numdiv:int64;
function GetN(a:LongNum; n:Integer = 1):Integer;
var
  i:Integer;
begin
  for i := 1001-n to 1000 do
  if (a[i] <> 0)then  //Нашли отличную от 0 цифру - здесь и начинается число
  begin
    GetN:=101-i ;
    Exit;
  end;
  GetN:=0;
end;
function Zero:LongNum;
var
  rez:LongNum;
  i:Integer ;
begin
    for i := 1 to 1000 do
      rez[i]:=0;
    Zero:=rez;
end;

function EnterNum (out n:Integer; var sc:string ) : LongNum;
var
  s:String;
  i:Integer;
  rez:LongNum;
begin
  s:=sc;
  rez:=Zero;
  for i := 1  to  length(s)   do
    rez[1000-length(s)+i]:= strtoint(s[i]);  //Â ìàññèâ ÷èñëî â íîñèì â êîíåö
  n:= GetN(rez,length(s));                  //Äëèíó ÷èñëà ïîëó÷àåì èç ôóíêöèè
  EnterNum:=rez;
end;

function Compare (a,b:LongNum; na,nb:Integer):TCompareRez;
var
  i:Integer;
begin
  if na>nb then
    Compare:=More
  else if na<nb then
    Compare:=Less
  else
  begin
    for i:= 1001-na to 1000 do
      if a[i] > b[i] then
      begin
        Compare:=More;
        Exit;
      end
      else if a[i] < b[i] then
      begin
        Compare:=Less;
        Exit;
      end;
    Compare:=Equally;
  end
end;

function Add(a,b:LongNum; na,nb:Integer; out nrez:Integer):LongNum;
var
  n,i,c:Integer;
  rez:LongNum;
begin
  rez:=Zero;

  //Äëèíà ðåçóëüòàòà ðàâíà äëèíå áîëüøåãî îåðàíäà è, ìîæò áûòü, +1
  if na>=nb then
    n:=na
  else
    n:=nb;

  for i := 1000 downto 1001-n do
  begin
    c:=rez[i]+a[i]+b[i];       //c= ïåðåíîñ + öèôðà ïåðâîãî îïåðàíäà + öèôðà âîòîðîãî îïåðàíäà
    rez[i]:= c mod 10;         //Çíà÷åíèå ðàçðÿäà
    rez[i-1]:=  c div 10;      // Ïåðåíîñ
  end;


 // Âîçìîæíî íåîáõîäèìî óâåëè÷èò äëèíó íà 1 (ïåðåíîñ â ïîñëåäåì ðàçðÿäå)
 if rez[1000-n] <> 0 then
    nrez:= n+1
 else
    nrez:=n;
 Add:=rez;
end;

function Min(a,b:LongNum; na,nb:Integer; out nrez:Integer):LongNum;
var
  n,i,c:Integer;
  rez:LongNum;
begin
  rez:=Zero();

  n:=na;

  for i := 1000 downto 1001-n do
  begin
    c:=a[i]-b[i]+rez[i];            //Â ñ ñðàçó ó÷èòûâàåì çà¸ì
    if c< 0 then                    //Åñëè ðàçíîñòü îòðèöàòåëüíàÿ íåîáõîäèì çà¸ì
    begin
      rez[i]:=  (10+c);             //Â ðàçðÿä äåêóùèé çàïèñûâàåì 10 + ðàçíîñòü
      rez[i-1]:=-1;                 //Îò ñëåäóþùåãî îòíèìàåì 1
    end
    else
      rez[i]:=  c;                  //Åñëè ïîëîæèòåëüíàÿ - ïðîñòî ïðèáàâëÿåì ê ðàçðÿäó
  end;

  nrez:=GetN(rez,n);                //Äëèíà èç ôóíêöèè - îíà ìîæåò áûòü ëþáîé
  Min:=rez;
end;

function Multiply(a,b:LongNum; na,nb:Integer; out nrez:Integer):LongNum;
var
  i,j,c,n:Integer;
  rez,t:LongNum ;
begin
    rez:=Zero;
    t:=Zero;
    n:=0;

  for i:= 1000 downto 1001-nb do      //Çàêðåïÿåì öèôðó ìíîæèìîãî
    for j:= 1000 downto 1001-na do    //Çàêðåïëÿåì öèôðó ìíîæèòåëÿ
    begin
       c:=a[j]*b[i];
       t[j+i-1000]:=c mod 10;        //t[100-(100-i)-(100-j)] - Ñìåùåíèå ñ ó÷¸òîì îáîèõ îïåðàíäîâ
       t[j+i-1000-1]:=c div 10;
       rez:= Add(rez,t,n,1002-(j+i-1000),n);  //Ñëàæèâàåì íå ïîëíîå ïðîèçâåäåíèå ñ ðçóëüòàòì äëÿ ïðåäûäóùåé öèôðû
       t:=Zero;
    end;

  //Îïðåäåëÿåì äëèíó ðåçóëüòàòà
  if rez[1001-n] <> 0 then
    nrez:= n
  else
    nrez:=n-1 ;
  Multiply:=rez;
end;

function Divide (a,b:LongNum; na,nb:Integer; out nrez:Integer):LongNum;
var
  i,n,nprez,tempn:Integer;
  prez,t,rez:LongNum ;
  x:TCompareRez;
begin
  t:=Zero;
  prez:=Zero;
  nrez:=0;
  rez:=Zero;
  n:=0;


  // Çàïèñûâàåì â ïåðåìåííóþ prez ïåðâûå öèôðû èç ïåðåìåííîé à,
  //    â êîëè÷åñòâå = äëèííå ïåðåìåííîé b
  for i:=n to n+nb-1 do
    prez[1001-nb+i-n]:=a[1001-na+i-n];
  nprez:=nb;
  n:=n+nb;

  repeat
  begin
    // Åñëè ÷èñëî ïîëó÷èëîñü ìåíüøå ÷åì b, òî äîïèñûâàå â ÊÎÍÅÖ åù¸ 1 ñèìâîë
    if ((Compare(prez,Zero,nprez,nprez) <> Equally) and (n<>na)) and (Compare(prez,b,nprez,nb) = Less) then
    begin
      for i:= 1001-nb to 1000 do            //Ñìåùàåì âñå öèôðû âëåâî
        prez[i-1]:=prez[i];
      prez[1000]:=a[1001-na+n];            //Äîïèñûâåì
      nprez:=nprez+1;
      nrez:=nrez+1;
      rez[nrez]:=0;
      n:=n+1
    end;

    // Ïåðåáèðàåì âñå öèôðû, ÷òîáû íàéòè òó, ïðè óìíîæåíèè íà êîòîðóþ à, ïîëó÷èì
    //  ÷èñëî áîëüøåå prez. Ýòà öèôðà áóäåò èëè ðàâíà èëè íà 1 áîëüøå öèôðû ÷àñòíîãî
    for i:=0 to 10 do
    begin
      t[1000]:=i;
      t:=Multiply(b,t,nb,1,tempn);

      x:= Compare(t,prez,tempn,nprez);
      if (x <> Less) then                 //Åñëè b*i>=prez
      begin
        nrez:=nrez+1;                     //Óâåëè÷èâàåì äëèíó ðåçóëüòàòà
        if x = More then                  //Åñëè ïîëó÷èëè áîëüøå, òî î÷åðåäíàÿ öèôðà ðåçóëüòàòà íà 1 ìåíüøå i
        begin
          rez[nrez]:=i-1;
          prez:= Min(prez,Min(t,b,tempn,nb,tempn),nprez,tempn,nprez)  //Äàëüøå ðàáîòàåì ñ ðàçíîñòüþ prez è b*(i-1) (b*i-b=t-b)
        end
        else
        begin                             //Åñëè b*i=prez, òî î÷åðåäíàÿ öèôðà ðåçóëüòàòà ðàâíà i
          rez[nrez]:=i;
          prez:=Min(prez,t,nprez,tempn,nprez)                         //Äàëüøå ðàáîòàåì ñ ðàçíîñòüþ prez è b*i
        end;
        break;
      end //if (x <> Less)
    end;//for i:=1 to 10 do

    //Ïåðåìåùàåì öèôðû ðàáî÷åãî ÷èñëà(prez) è äîïèñûâàåì ñëåäóþøóþ öèôðó a
    for i:= 1001-nb to 1000 do
      prez[i-1]:=prez[i];
    prez[1000]:=a[1001-na+n];
    nprez:=nprez+1;
    n:=n+1
  end;
  until n > na;


  for i:=1 to nrez do
  begin
    rez[1000-nrez+i]:=rez[i];
    rez[i]:=0;
  end;
  Divide:=rez;

  if rez[1001-nrez] <> 0 then
    nrez:= nrez
  else
    nrez:=nrez-1 ;
end;
function questionToZero(inp:string):string;
begin
  if (inp[1] = '?') then
   inp[1] := '1';
  for i := 2 to n do
  begin
    if (inp[i] = '?') then
    inp[i] := '0';
  end;
  Result := inp;
end;

function questionToNine(inp:string):string;
begin
  for i := 1 to n do
  begin
    if (inp[i] = '?') then
    inp[i] := '9';
  end;
  Result := inp;
end;

function cmpThis(currnum:int64; inp:string):boolean;
var
i:integer;
sr:string;

begin
  Result := true;
  sr := IntToStr(currnum);

  for i := 1 to length(inp) do
  begin
    if inp[i] in ['0'..'9'] then
    begin
      if inp[i] <> sr[i] then
      begin
        Result := false;
        break;
      end;
    end;
  end;

end;

begin
  readln(n);
  readln(k);
  readln(inp);
  if inp = '?' then
  begin
    Writeln(k);
    Exit;
  end;
  numInp := questionToZero(inp);
  maxNumInp := questionToNine(inp);
  //writeln(numInp);
  a:=EnterNum(na,numInp) ;
  b:=EnterNum(nb,k);
  numdiv := numInp div k;
  currnum := numdiv*k;
  // Writeln(currnum);
  while currnum <= maxNumInp do
  begin
    if (cmpThis(currnum, inp)) then
    begin
    writeln(currnum);
    readln;
    exit;
    end;
    currnum := currnum + k;
    // writeln(currnum);
  end;
  writeln('-1');

  Readln;
end.


